#!/bin/bash

FPKGDIR="/usr/local/fpkg/" # where all packages are located at
EDIOR="vim"                # change this to your favorite editor

error () {
	popd > /dev/null
	stty echo
	exit 1
}

write_check () {
	touch $FPKGDIR > /dev/null 2>&1

	if [[ $? != 0 ]]; then
		echo "ERROR: you cannot write to $FPKGDIR! Please run as root"
		error
	fi
}

# hide the keystrokes, save current directory to go to
# the fpkg one
stty -echo
pushd . > /dev/null
cd $FPKGDIR

if [[ $? != 0 ]]; then
	echo "ERROR: $FPKGDIR does not exist! Create it now? [Y/n]"
	read choice

	if [[ choice != "n" ]]; then
		mkdir -v $FPKGDIR
	fi

	error
fi

case $1 in
	# refresh every package using git pull
	"update" | "u")
		entries=$(cat pkg.list | wc -l)

		for ((i = 1; i <= $entries; i++)); do
			pkg_dir=$(head -n $i pkg.list | tail -1)
			cd $pkg_dir > /dev/null 2>&1
					
			if [[ $? != 0 ]]; then
				echo "ERROR: $pkg_dir does not exist!"
				echo "Remove its entry with 'fpkg delete' and try again. Aborting..."
				error
			fi

			echo "$pkg_dir:"
			git pull
			cd - > /dev/null
		done
		;;

	# requested the installation of a package?
	"install" | "i")
		if [[ -z $2 ]]; then
			echo "ERROR: package name was not provided!"
			error
		fi

		cd ii/

		if [[ $? != 0 ]]; then
			echo "ERROR: $FPKGDIR/ii/ does not exist! Create it now? [Y/n]"
			read choice

			if [[ choice != "n" ]]; then
				mkdir -v ii/
			fi

			error
		fi

		./$2.ii
		;;

	"list" | "l")
		cat pkg.list
		echo ""
		echo "Total: $(cat pkg.list | wc -l)"
		;;

	# adding an entry to the list?
	"add" | "a")
		write_check

		stty echo
		echo "Package name:"
		read pkg_name
		echo $pkg_name >> pkg.list
		echo "# Writing installation instructions for package, you can ignore this line" > ii/$pkg_name.ii
		echo "cd ../<package_dir_here>/" > ii/$pkg_name.ii
		$EDITOR ii/$pkg_name.ii
		chmod +x ii/$pkg_name.ii
		;;

	# delete an entry from the list?
	"delete" | "d")
		write_check

		stty echo
		echo "Removing:"
		read pkg_name
		entry=$(grep -w "^$pkg_name" pkg.list -n | awk -F: '{ print $1 }')
		sed -i "$entry"d pkg.list
		rm ii/$pkg_name.ii
		echo "$pkg_name removed, would you like to remove its files as well? [y/N]"
		read file_removal

		if [[ $file_removal = 'y' ]]; then
			echo "Package directory (relative to /usr/local/fpkg/):"
			read dir
			rm -rf $dir
		else
			popd > /dev/null
			stty echo
		fi
		;;

	# requested the message of last git commit?
	"message" | "m")
		if [[ -z $2 ]]; then
			echo "ERROR: package name was not provided!"
			error
		fi

		if [[ $2 = "-d" ]]; then
			cd $3
		else
			cd $2
		fi

		if [[ $? != 0 ]]; then
			echo "Package does not exist! Was it a typo?"
			error
		fi

		if [[ $2 = "-d" ]]; then
			git show
		else
			echo $(git log -1 --pretty=%B)
		fi
		;;

	# didn't even input a valid option?
	"help" | *)
		echo "Usage: fpkg [action] [package]"
		echo "Actions:"
		echo "help | h           - shows this help message"
		echo "update | u         - git pull every package listed in pkg.list"
		echo "install | i <pkg>  - install <pkg> using instruction file"
		echo "list | l           - list all registered packages"
		echo "add | a            - add a package to the list"
		echo "delete | d         - remove a package from the list"
		echo "message [-d] <pkg> - get comment from last git commit of <pkg>. Takes an"
		echo "                     optional -d for getting the diff"

		if [[ $1 != "help" ]]; then
			error
		fi
		;;
esac

# restore the directory, and unhide
# keystrokes
popd > /dev/null
stty echo
